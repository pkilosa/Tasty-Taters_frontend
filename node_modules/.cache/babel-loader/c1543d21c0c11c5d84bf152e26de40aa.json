{"ast":null,"code":"import axios from 'axios';\nconst LOGIN_USER_KEY = 'WD_FORUM_LOGIN_USER_KEY';\nvar baseURL;\n\nif (process.env.REACT_APP_ENVIRONMENT && process.env.REACT_APP_ENVIRONMENT === 'PRODUCTION') {\n  baseURL = process.env.REACT_APP_API_BASE_URL;\n} else {\n  baseURL = 'http://127.0.0.1:8000';\n}\n\nconst api = axios.create({\n  baseURL: baseURL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n/**\n * Add requireToken: true in request config, for API that required Authorization token\n */\n\napi.interceptors.request.use(config => {\n  if (config.requireToken && localStorage.getItem(LOGIN_USER_KEY)) {\n    config.headers.common['Authorization'] = JSON.parse(localStorage.getItem(LOGIN_USER_KEY)).token;\n  }\n\n  return config;\n}, err => {\n  console.error(err);\n});\nexport default class API {\n  constructor() {\n    this.getPosts = async params => {\n      try {\n        const response = await api.get('/posts/', {\n          params\n        });\n        return response.data;\n      } catch (error) {\n        throw new Error(error);\n      }\n    };\n\n    this.addPost = async postBody => {\n      const formData = new FormData();\n\n      for (const key in postBody) {\n        formData.append(key, postBody[key]);\n      }\n\n      try {\n        const response = await api.post('/posts/add/', formData);\n        return response.data;\n      } catch (error) {\n        throw new Error(error);\n      }\n    };\n\n    this.deletePost = async id => {\n      try {\n        return await api.delete(`/posts/delete/${id}/`);\n      } catch (error) {\n        throw new Error(error);\n      }\n    };\n\n    this.getItem = async params => {\n      try {\n        const res = await api.get('/item');\n        return res.data.results;\n      } catch (error) {\n        throw new Error(error);\n      }\n    };\n\n    this.getReviews = async item_id => {\n      let url = \"/reviews/?item_id=\" + item_id;\n      const reviews = await api.get(url).then(response => {\n        return response.data.results;\n      }).catch(err => {\n        throw new Error(err);\n      });\n      return reviews;\n    };\n\n    this.addReviews = async (name, body, like_count, item_id) => {\n      let url = \"/reviews/add\";\n      const reviews = await api.post(url, {\n        name\n      }).then(response => {\n        return response.data.results;\n      }).catch(err => {\n        throw new Error(err);\n      });\n      return reviews;\n    };\n  }\n\n}","map":{"version":3,"names":["axios","LOGIN_USER_KEY","baseURL","process","env","REACT_APP_ENVIRONMENT","REACT_APP_API_BASE_URL","api","create","headers","interceptors","request","use","config","requireToken","localStorage","getItem","common","JSON","parse","token","err","console","error","API","getPosts","params","response","get","data","Error","addPost","postBody","formData","FormData","key","append","post","deletePost","id","delete","res","results","getReviews","item_id","url","reviews","then","catch","addReviews","name","body","like_count"],"sources":["/Users/admin/Downloads/techis-wd-forum-django-react-main/frontend/src/API.js"],"sourcesContent":["import axios from 'axios';\nconst LOGIN_USER_KEY = 'WD_FORUM_LOGIN_USER_KEY';\n\nvar baseURL;\nif (process.env.REACT_APP_ENVIRONMENT && process.env.REACT_APP_ENVIRONMENT === 'PRODUCTION') {\n    baseURL = process.env.REACT_APP_API_BASE_URL;\n} else {\n    baseURL = 'http://127.0.0.1:8000';\n}\n\nconst api = axios.create({\n    baseURL: baseURL,\n    headers: {\n        'Content-Type': 'application/json'\n    }\n});\n\n/**\n * Add requireToken: true in request config, for API that required Authorization token\n */\napi.interceptors.request.use(\n    config => {\n        if (config.requireToken && localStorage.getItem(LOGIN_USER_KEY)) {\n            config.headers.common['Authorization'] = JSON.parse(localStorage.getItem(LOGIN_USER_KEY)).token;\n        }\n\n        return config;\n    },\n    err => {\n        console.error(err);\n    }\n);\n\nexport default class API {\n    getPosts = async params => {\n        try {\n            const response = await api.get('/posts/', { params });\n            return response.data;\n        } catch (error) {\n            throw new Error(error);\n        }\n    };\n    addPost = async postBody => {\n        const formData = new FormData();\n\n        for (const key in postBody) {\n            formData.append(key, postBody[key]);\n        }\n\n        try {\n            const response = await api.post('/posts/add/', formData);\n            return response.data;\n        } catch (error) {\n            throw new Error(error);\n        }\n    };\n    deletePost = async id => {\n        try {\n            return await api.delete(`/posts/delete/${id}/`);\n        } catch (error) {\n            throw new Error(error);\n        }\n    };\n    getItem = async params =>{\n        try{\n            const res =  await api.get('/item')\n            return res.data.results\n        }\n        catch(error){\n            throw new Error (error)\n        }\n    }\n    getReviews = async(item_id) =>{\n        let url = \"/reviews/?item_id=\" + item_id;\n        const reviews = await api.get(url).then((response)=>{\n            return response.data.results\n        }).catch(err=>{\n            throw new Error(err)\n        })\n        return reviews\n    }\n    addReviews = async(name, body, like_count, item_id) =>{\n        let url = \"/reviews/add\" \n        const reviews = await api.post(url, {name}).then((response)=>{\n            return response.data.results\n        }).catch(err=>{\n            throw new Error(err)\n        })\n        return reviews\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}